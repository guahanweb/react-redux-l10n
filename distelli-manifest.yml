Permissions-Center-Group/permissions-center-ui:

###  README FIRST ! ! !
### This maniafest expects that environment variables to be configured in your Distelli environment:
###
###   AWSRegion - The AWS region your ECS cluster is in
###   ECSServiceName - The name of your ECS service
###   ECSClusterName - The name of your ECS cluster
###   ECSTaskDefinitionName - The name of your ECS task definition
###   CONTAINER_IMAGE_NAME - The name of your docker container
###   DISTELLI_DOCKER_REPO - URL to the docker repository.
###   DOCKERTAG - The docker tag to deploy. Only needed if not supplied by release
###
###  For example:
###
###   AWSRegion=us-west-2
###   ECSServiceName=simple-ecs-deployment-service
###   ECSClusterName=simple-ecs-deployment-cluster
###   ECSTaskDefinitionName=simple-ecs-deployment-taskDef
###   CONTAINER_IMAGE_NAME=maraudersmap
###   DISTELLI_DOCKER_REPO=339912394116.dkr.ecr.us-west-2.amazonaws.com/um-api
###   DOCKERTAG=latest
###
#####################################################################################################


### If building your Docker image with Distelli, place all Docker commands here.

  Build:

    - echo "=================="
    - echo "Nothing to do here"
    - echo "=================="

  PkgInclude:
    - '*'

### In this example, we're injecting the DISTELLI_BUILDNUM into the JSON that will register a new task definition in ECS. The DISTELLI_BUILDNUM
### is the tag associated with the new Docker image that is to be deployed to ECS

  InstallTemplates:

    - ecs_task.json

### JQ (https://stedolan.github.io/jq/) is a powerful JSON parser used in the PostInstall steps
###
### At the time of this writting, an update to the AWS CLI was needed in order to fully support ECS CLI commands

  PreInstall:
    - sudo yum install jq -y
    - sudo pip install --upgrade awscli

  PostInstall:

    - cat ecs_task.json
    - echo "========    THE DISTELLI BUILD NUMBER IS $DISTELLI_BUILDNUM    ========"
    - echo "========    Running ECS list clusters command    ========"

### This command is here to verify that your AWS CLI is setup correctly
    - echo "aws ecs list-clusters --region=${AWSRegion}"
    - aws ecs list-clusters --region=${AWSRegion}
    - echo "========    Running ecs register-task-definition command    ========"

### This command will create the new task definition in ECS. The output JSON is captured to a local file called revisionID.json

    - echo "aws ecs register-task-definition --region=${AWSRegion} --cli-input-json file://ecs_task.json | tee revisionID.json"
    - aws ecs register-task-definition --region=${AWSRegion} --cli-input-json file://ecs_task.json | tee revisionID.json

### This command uses JQ to parse our the revision ID from the register-task-definition command and set it up as an environment variable

    - echo "revisionID=$(cat revisionID.json | jq '.taskDefinition.revision')"
    - revisionID=$(cat revisionID.json | jq '.taskDefinition.revision')

    - echo "========    THE REVISION ID IS $revisionID    ========"
    - echo "========    Running ecs update-service command    ========"

### This command will run the update-service command which tells ECS to deploy the newly built container

    - echo "aws ecs update-service --region=$AWSRegion --service ${ECSServiceName} --cluster ${ECSClusterName} --task-definition ${ECSTaskDefinitionName}:${revisionID}"
    - aws ecs update-service --region=$AWSRegion --service ${ECSServiceName} --cluster ${ECSClusterName} --task-definition ${ECSTaskDefinitionName}:${revisionID}
